# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'inventory_n.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from datetime import datetime
from openpyxl import load_workbook
from openpyxl.utils import get_column_letter
import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import Qt



badgeID = 'A50291'
hardwareBarCode = '01-STK'
ScanID = 1
ScanBarcode = 1

dateTimeObj = datetime.now()
dateStampStr = dateTimeObj.strftime("%d-%b-%Y")
timeStampStr = dateTimeObj.strftime("%I:%M %p")
dateTimeforList = dateStampStr +" "+ timeStampStr


class Ui_MainWindow(object):

    def changeUserID(self, badgeID):
        self.BadgeID_name.setText(badgeID)

    def changeHardwareCode(self, hardwareBarCode):
        self.BoardLabel.setText(hardwareBarCode)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(620, 508)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.BorrowButton = QtWidgets.QPushButton(self.centralwidget)
        self.BorrowButton.setGeometry(QtCore.QRect(10, 100, 111, 51))
        self.BorrowButton.setObjectName("BorrowButton")
        self.ReturnButton = QtWidgets.QPushButton(self.centralwidget)
        self.ReturnButton.setGeometry(QtCore.QRect(130, 100, 111, 51))
        self.ReturnButton.setObjectName("ReturnButton")
        self.UserLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.UserLabel_2.setGeometry(QtCore.QRect(12, 446, 121, 16))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.UserLabel_2.setFont(font)
        self.UserLabel_2.setObjectName("UserLabel_2")
        self.UserLabel_3 = QtWidgets.QLabel(self.centralwidget)
        self.UserLabel_3.setGeometry(QtCore.QRect(136, 446, 481, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.UserLabel_3.setFont(font)
        self.UserLabel_3.setObjectName("UserLabel_3")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 20, 221, 54))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.UserLabel = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.UserLabel.setFont(font)
        self.UserLabel.setObjectName("UserLabel")
        self.horizontalLayout.addWidget(self.UserLabel)
        self.BadgeID_name = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.BadgeID_name.setFont(font)
        self.BadgeID_name.setScaledContents(True)
        self.BadgeID_name.setWordWrap(True)
        self.BadgeID_name.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.BadgeID_name.setObjectName("BadgeID_name")
        self.horizontalLayout.addWidget(self.BadgeID_name)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ScanLabel = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.ScanLabel.setFont(font)
        self.ScanLabel.setObjectName("ScanLabel")
        self.horizontalLayout_2.addWidget(self.ScanLabel)
        self.BoardLabel = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.BoardLabel.setFont(font)
        self.BoardLabel.setScaledContents(True)
        self.BoardLabel.setWordWrap(True)
        self.BoardLabel.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.BoardLabel.setObjectName("BoardLabel")
        self.horizontalLayout_2.addWidget(self.BoardLabel)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 170, 601, 271))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setSortIndicatorShown(True)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.tableWidget.setWordWrap(True)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)

        self.boardComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.boardComboBox.setGeometry(QtCore.QRect(300, 20, 151, 31))
        self.boardComboBox.setObjectName("boardComboBox")
        self.CheckButton = QtWidgets.QPushButton(self.centralwidget)
        self.CheckButton.setGeometry(QtCore.QRect(300, 60, 101, 31))
        self.CheckButton.setObjectName("CheckButton")
        self.CheckLabel = QtWidgets.QLabel(self.centralwidget)
        self.CheckLabel.setGeometry(QtCore.QRect(460, 20, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Mongolian Baiti")
        font.setPointSize(25)
        self.CheckLabel.setFont(font)
        self.CheckLabel.setObjectName("CheckLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 620, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.BorrowButton.setText(_translate("MainWindow", "Borrow"))
        self.ReturnButton.setText(_translate("MainWindow", "Return"))
        self.UserLabel_2.setText(_translate("MainWindow", "Recent activity:"))
        self.UserLabel_3.setText(_translate("MainWindow", "/Badge ID/ returned/borrowed /itemdescription/ on /timeStamp/."))
        self.UserLabel.setText(_translate("MainWindow", "USER:"))
        self.BadgeID_name.setText(_translate("MainWindow", "Badge ID not found."))
        self.ScanLabel.setText(_translate("MainWindow", "Hardware:"))
        self.BoardLabel.setText(_translate("MainWindow", "Code not found."))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Barcode"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Item Description"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Employee"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Borrow"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Return"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Remarks"))
        self.CheckButton.setText(_translate("MainWindow", "Check availability"))
        self.CheckLabel.setText(_translate("MainWindow", "âœ“"))
        self.CheckLabel.setHidden(True)
        self.boardComboBox.addItem("01-STK")
        self.boardComboBox.addItem("02 -STK")
        self.boardComboBox.addItem("03-STK")

        self.BorrowButton.clicked.connect(self.BorrowUpdateList)
        self.ReturnButton.clicked.connect(self.ReturnUpdateList)
        self.CheckButton.clicked.connect(self.CheckBoard)

        if badgeID != None:
            self.BadgeID_name.setText(badgeID)
        if hardwareBarCode != None:
            self.BoardLabel.setText(hardwareBarCode)




    def BorrowUpdateList(self):
        items = self.tableWidget.findItems(hardwareBarCode, Qt.MatchExactly)
        if items:  # we have found something
            item = items[0]  # take the first
            self.tableWidget.setCurrentItem(item)
            row_n = self.tableWidget.currentRow()
            if self.tableWidget.item(row_n,4) == None:
                print ("Error: Board not available")
            elif self.tableWidget.item(row_n, 4) != None:
                self.tableWidget.insertRow(0)
                self.tableWidget.setItem(0, 0, QTableWidgetItem(hardwareBarCode))
                # self.tableWidget.setItem(0, 1, itemDescription)
                self.tableWidget.setItem(0, 2, QTableWidgetItem(badgeID))
                self.tableWidget.setItem(0, 3, QTableWidgetItem(dateTimeforList))

                self.tableWidget.horizontalHeader().setStretchLastSection(True)
                self.tableWidget.resizeColumnsToContents()
        else:
        # self.listWidget.addItem("/Badge ID/ returned/borrowed /itemdescription/ on /timeStamp/.")
        # self.listWidget.addItem(badgeID + " borrowed " + hardwareBarCode + " on " + dateTimeforList )
            self.tableWidget.insertRow(0)
            self.tableWidget.setItem(0,0,QTableWidgetItem(hardwareBarCode))
            self.tableWidget.setItem(0, 2, QTableWidgetItem(badgeID))
            self.tableWidget.setItem(0, 3, QTableWidgetItem(dateTimeforList))
            self.tableWidget.horizontalHeader().setStretchLastSection(True)
            self.tableWidget.resizeColumnsToContents()

        self.UserLabel_3.setText(badgeID + " borrowed " + hardwareBarCode + " on " + dateTimeforList )



    def ReturnUpdateList(self):
        items = self.tableWidget.findItems(hardwareBarCode,Qt.MatchExactly)
        #self.listWidget.insertItem(0, badgeID + " returned " + hardwareBarCode + " on " + dateTimeforList)
        if items:  # we have found something
            item = items[0]  # take the first
            self.tableWidget.setCurrentItem(item)
            row_n = self.tableWidget.currentRow()
            self.tableWidget.setItem(row_n, 4, QTableWidgetItem(dateTimeforList))
            print (row_n)

        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.resizeColumnsToContents()
        self.UserLabel_3.setText(badgeID + " returned " + hardwareBarCode + " on " + dateTimeforList)

    def CheckBoard(self):
        items = self.tableWidget.findItems(self.boardComboBox.currentText(), Qt.MatchExactly)
        if items:  # we have found something
            item = items[0]  # take the first
            self.tableWidget.setCurrentItem(item)
            row_n = self.tableWidget.currentRow()
            if self.tableWidget.item(row_n,4) == None:
                print ("Error: Board not available")
            elif self.tableWidget.item(row_n,4) != None:
                print('Board available')

        else:
            print('Board available')



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
